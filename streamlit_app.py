import streamlit as st
import pandas as pd
import time
from search_keywords import *
from data_processing import *
from appearance import *

st.cache_data.clear()
# Show the page title and description.
st.set_page_config(page_title="–°–ø–∏—Å–æ–∫ —Ñ–∏–ª—å–º–æ–≤", 
                   page_icon="üé¨", 
                   menu_items={
                       'About': "# This is an *extremely* cool app! \n\
                       –ö–∞–∫ –∂–µ —è –∑–∞–µ–±–∞–ª—Å—è —ç—Ç–æ –¥–µ–ª–∞—Ç—å..."
                   }
                )

# Load the data from a CSV. We're caching this so it doesn't reload every time the app
# reruns (e.g. if the user interacts with the widgets).
@st.cache_data
def load_data():
    df = pd.read_csv("data/movies.csv", sep='\t')
    # st.write(df.iloc[0])

    return df


st.title("üé• –°–º–æ—Ç—Ä–µ—Ç—å –æ–Ω–ª–∞–π–Ω –±–µ—Å–ø–ª–∞—Ç–Ω–æ")
st.subheader("–í–æ—Ç —Ç—É—Ç –∏ –±—É–¥–µ–º –≤—ã–±–∏—Ä–∞—Ç—å —á—Ç–æ –º—ã –±—É–¥–µ–º —Å–µ–≥–æ–¥–Ω—è —Å–º–æ—Ç—Ä–µ—Ç—å  ü§© üëÄ ", divider='violet')
st.write(":violet-background[—ç—Ç–æ –≤—Å–µ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –∫–æ—Ç–æ—Ä—ã–µ —è —Ö–æ—á—É –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–æ–≥–¥–∞-–Ω–∏–±—É–¥—å...]")

df = load_data()

if "disabled" not in st.session_state:
    st.session_state.disabled = False
    st.session_state.new_mov = ""

def on_change():
    st.session_state.disabled = True
    st.session_state.new_mov = ""

def enable_input():
    st.session_state.disabled = False

text_input = st.text_input(
    "–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç",
    label_visibility='collapsed',
    placeholder='–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –µ—â–µ',
    key="new_mov",
    on_change=on_change,
    disabled=st.session_state.disabled
)
# –≤–∫–ª—é—á–∞–µ—Ç –∫–Ω–æ–ø–∫—É –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –æ—Ç–∫—Ä—ã—Ç–∏—è –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–æ–ª—é –≤–≤–æ–¥–∞
if st.session_state.disabled:
    st.button("–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª–µ –≤–≤–æ–¥–∞", on_click=enable_input, disabled=not st.session_state.disabled)

# st.text_input("New-mov", label_visibility='collapsed', placeholder='–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π', key='new_mov')
if text_input:
    # st.info('–°–ø–∞—Å–∏–±–æ –∑–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ!!!')
    st.success('–°–ø–∞—Å–∏–±–æ –∑–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ!!!', icon="‚úÖ")
    # add_film(st.session_state.new_mov)
    # updated_df = add_film(st.session_state.new_mov, df)
    # if updated_df is not None:
    #     df = updated_df
        # # –û—á–∏—Å—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—è –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ñ–∏–ª—å–º–∞
        # st.session_state.new_mov = ' '
        # –§–ª–∞–∂–æ–∫ –¥–ª—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
        # st.experimental_rerun()


col1, col2 = st.columns(2)
selected_types = create_checkboxes(col1, col2)
# –î–æ–±–∞–≤–ª—è–µ–º —Å–ª–∞–π–¥–µ—Ä –¥–ª—è –≤—ã–±–æ—Ä–∞ –≥–æ–¥–∞
years = st.slider("–ì–æ–¥—ã", min_value=1950, max_value=2030, value=(1954, 2010))


# –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è DataFrame
df_filtered = filter_dataframe(df, selected_types, years)


st.write('–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ—Å—Ç–µ—Ä - :red[–¥–≤–∞–∂–¥—ã] –Ω–∞ –Ω–µ–≥–æ –Ω–∞–∂–º–∞–π')

# –ü–æ–∫–∞–∑–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –Ω–∞ —ç–∫—Ä–∞–Ω–µ —á–µ—Ä–µ–∑ st.dataframe
st.dataframe(
    df_filtered,
    # —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç–∞—Ñ—Ä–µ–π–º–∞
    column_config={
        "name": st.column_config.TextColumn(
            "–ù–∞–∑–≤–∞–Ω–∏–µ", 
            width='medium',
        ),
        "img": st.column_config.ImageColumn(
            '–ü–æ—Å—Ç–µ—Ä', 
        ),
        "year": st.column_config.NumberColumn(
            '–ì–æ–¥', 
            format="%d",
        ),
        'genres': st.column_config.ListColumn(
            '–ñ–∞–Ω—Ä—ã',
            width='medium',
        ),
        "rating": st.column_config.NumberColumn(
            '–†–µ–π—Ç–∏–Ω–≥', 
            # width ='small',
            help='–†–µ–π—Ç –Ω–∞ –ö–∏–Ω–æ–ø–æ–∏—Å–∫—É',
        ),
        "length": st.column_config.TimeColumn(
            "–î–ª–∏–Ω–∞",
            format='HH:mm',
        ),
            # width ='small',
        "type": st.column_config.TextColumn(
            "–§–æ—Ä–º–∞—Ç", 
        ),
    },
    hide_index=True,
)


def stream_data():
    text = '''
    [reyohoho.github.io/reyohoho](https://reyohoho.github.io/reyohoho) \n
    [reyohoho.serv00.net](https://reyohoho.serv00.net) \n
    [reyohoho.vercel.app](https://reyohoho.vercel.app) \n
    [reyohoho.surge.sh](https://reyohoho.surge.sh) \n
    '''
    return text

if st.button("–ì–¥–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å"):
    sleep = 0.03
    placeholder = st.empty()
    full_text = ""
    for char in stream_data():
        if char == '(':
            sleep = 0
        elif char == '[':
            sleep = 0.03

        full_text += char
        placeholder.markdown(full_text)
        time.sleep(sleep)

# streamlit run streamlit_app.py --server.enableCORS false --server.enableXsrfProtection false

